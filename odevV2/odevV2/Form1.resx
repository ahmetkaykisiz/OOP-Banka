<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>